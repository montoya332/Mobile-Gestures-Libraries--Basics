{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"console.log('Hammer');\n\nvar myElement = document.getElementById('hammer-gesture');\n\n// create a manager for that element\nvar mc = new Hammer.Manager(myElement);\n\n// create a recognizer\nvar Rotate = new Hammer.Rotate();\n\n// add the recognizer\nmc.add(Rotate);\n\n// subscribe to events\nmc.on('rotate', function (e) {\n  // do something cool\n  var rotation = Math.round(e.rotation);\n\n  myElement.style.transform = 'rotate(' + rotation + 'deg)';\n});\n\n// listen to events...\nmc.on(\"panleft panright tap press\", function (ev) {\n  console.log('gesture detected.');\n  myElement.textContent = ev.type + \" gesture detected.\";\n});","ast":null,"map":{"version":3,"sources":["/client/hammer.js"],"names":[],"mappings":"AAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAEtB,IAAI,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;;;AAG1D,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;;;AAIvC,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;;;AAIjC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;;AAIf,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAS,CAAC,EAAE;;AAE5B,MAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;;AAEtC,WAAS,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,GAAC,QAAQ,GAAC,MAAM,CAAC;CACrD,CAAC,CAAC;;;AAGH,EAAE,CAAC,EAAE,CAAC,4BAA4B,EAAE,UAAS,EAAE,EAAE;AAChD,SAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAA;AAC7B,WAAS,CAAC,WAAW,GAAG,EAAE,CAAC,IAAI,GAAE,oBAAoB,CAAC;CACzD,CAAC,CAAC","file":"/client/hammer.js.map","sourcesContent":["console.log('Hammer');\n\nvar myElement = document.getElementById('hammer-gesture');\n\n// create a manager for that element\nvar mc = new Hammer.Manager(myElement);\n\n\n// create a recognizer\nvar Rotate = new Hammer.Rotate();\n\n\n// add the recognizer\nmc.add(Rotate);\n\n\n// subscribe to events\nmc.on('rotate', function(e) {\n// do something cool\nvar rotation = Math.round(e.rotation);\n\nmyElement.style.transform = 'rotate('+rotation+'deg)';\n});\n\n// listen to events...\nmc.on(\"panleft panright tap press\", function(ev) {\n\tconsole.log('gesture detected.')\n    myElement.textContent = ev.type +\" gesture detected.\";\n});"]},"hash":"a000bcb659dbece42d5b81870f76f61dad4ee1b0"}
