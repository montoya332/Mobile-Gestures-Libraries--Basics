{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"console.log('Hammer');\n\nvar myElement = document.getElementById('hammer-gesture');\n\n// create a simple instance\n// by default, it only adds horizontal recognizers\nvar mc = new Hammer(myElement);\n\n// listen to events...\nmc.on(\"panleft panright tap press\", function (ev) {\n    myElement.textContent = ev.type + \" gesture detected.\";\n});","ast":null,"map":{"version":3,"sources":["/client/hammer.js"],"names":[],"mappings":"AAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;;AAEtB,IAAI,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;;;;AAI1D,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;;;AAG/B,EAAE,CAAC,EAAE,CAAC,4BAA4B,EAAE,UAAS,EAAE,EAAE;AAC7C,aAAS,CAAC,WAAW,GAAG,EAAE,CAAC,IAAI,GAAE,oBAAoB,CAAC;CACzD,CAAC,CAAC","file":"/client/hammer.js.map","sourcesContent":["console.log('Hammer');\n\nvar myElement = document.getElementById('hammer-gesture');\n\n// create a simple instance\n// by default, it only adds horizontal recognizers\nvar mc = new Hammer(myElement);\n\n// listen to events...\nmc.on(\"panleft panright tap press\", function(ev) {\n    myElement.textContent = ev.type +\" gesture detected.\";\n});"]},"hash":"89b82d0fe21df43e434ed700e713c8654b621560"}
