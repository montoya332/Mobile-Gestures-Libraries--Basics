{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"// console.log('Hammer');\n\n// var myElement = document.getElementById('hammer-gesture');\n\n// // create a simple instance\n// // by default, it only adds horizontal recognizers\n// var mc = new Hammer(myElement);\n\n// // listen to events...\n// mc.on(\"panleft panright tap press\", function(ev) {\n// \tconsole.log('gesture detected.')\n//     myElement.textContent = ev.type +\" gesture detected.\";\n// });\n//\n//\nTemplate.showProduct.gestures({\n   'press #hammer-gesture': function (e, t) {\n      e.preventDefault();\n      console.log(\"HAMMERTIME!\");\n   }\n});","ast":null,"map":{"version":3,"sources":["/client/hammer.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC;AAC7B,0BAAuB,EAAE,UAAS,CAAC,EAAE,CAAC,EAAE;AACrC,OAAC,CAAC,cAAc,EAAE,CAAC;AACnB,aAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IAC5B;CACF,CAAC,CAAC","file":"/client/hammer.js.map","sourcesContent":["// console.log('Hammer');\n\n// var myElement = document.getElementById('hammer-gesture');\n\n// // create a simple instance\n// // by default, it only adds horizontal recognizers\n// var mc = new Hammer(myElement);\n\n// // listen to events...\n// mc.on(\"panleft panright tap press\", function(ev) {\n// \tconsole.log('gesture detected.')\n//     myElement.textContent = ev.type +\" gesture detected.\";\n// });\n// \n// \nTemplate.showProduct.gestures({\n 'press #hammer-gesture': function(e, t) {\n    e.preventDefault();\n    console.log(\"HAMMERTIME!\");\n  }\n});"]},"hash":"68d5efae9d270335c3d90922c3fd5141a1b5388e"}
